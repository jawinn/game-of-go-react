.game {
  min-height: 100vh;
  text-align: center;
  display: grid;
  place-items: center;
  overflow: auto;
  grid-template-rows: min-content;
}

.gameIntro {
  padding: 0 1.5rem;
  margin: 3.0rem 0;
}

.title {
  font-size: 9.0rem;
  line-height: 1.0;
  margin: 0;
  letter-spacing: 2px;
}

.title small {
  display: block;
  font-size: 1.6rem;
}

.subtitle {
  font-size: 0.9rem;
}

.status {
  color: #ffbfa0;
}

.content {
  height: 100%;
  width: 100%;
  padding: 0 1.0rem;
  margin-left: auto;
  margin-right: auto;
  max-width: 1200px;
}

.radioGrid {
  display: grid;
  gap: 0.75rem;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.radioGridItem {
  background: var(--palette-primary);
  padding: 0.5rem 0.5rem;
  border-radius: 10px;
  border: 5px solid transparent;
}

.radioGridItemSelected {
  composes: radioGridItem;
  border: 5px solid #FFFFFF;
  background-color: #387f93;
}

.itemHeading {
  font-size: 2.0rem;
  letter-spacing: 1px;
  font-weight: bold;
  white-space: nowrap;
}

.itemSubheading {
  letter-spacing: 2px;
  text-transform: uppercase;
  margin-bottom: 1.5rem;
}

.by {
  font-size: 90%;
  font-weight: normal;
}

.radioInput {
  width: 36px;
  height: 36px;
  accent-color: var(--palette-tertiary);
}

@media (min-width: 1000px) {
  .radioGridItem {
    padding: 2.5rem 1.0rem;
  }
  .itemHeading {
    font-size: 3.0rem;
  }
}

/* @todo Make reusable app-wide. Possibly make into its own component. */
.button {
  border-radius: 8px;
  padding: 1.0rem 2.0rem;
  min-width: 100px;
  font-size: 1.25rem;
  font-weight: bold;
  background: #ffffff;
  color: var(--palette-tertiary);
  border: 0;
  cursor: pointer;
}

.button:hover,
.button:focus {
  background: #c1efff;
}